/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  addDecoderSizePrefix,
  addEncoderSizePrefix,
  combineCodec,
  fixDecoderSize,
  fixEncoderSize,
  getBytesDecoder,
  getBytesEncoder,
  getStructDecoder,
  getStructEncoder,
  getU32Decoder,
  getU32Encoder,
  type Codec,
  type Decoder,
  type Encoder,
  type ReadonlyUint8Array,
} from '@solana/kit';

export type QSBTCTransactionInput = {
  hash: ReadonlyUint8Array;
  index: number;
  script: ReadonlyUint8Array;
  sequence: number;
};

export type QSBTCTransactionInputArgs = QSBTCTransactionInput;

export function getQSBTCTransactionInputEncoder(): Encoder<QSBTCTransactionInputArgs> {
  return getStructEncoder([
    ['hash', fixEncoderSize(getBytesEncoder(), 32)],
    ['index', getU32Encoder()],
    ['script', addEncoderSizePrefix(getBytesEncoder(), getU32Encoder())],
    ['sequence', getU32Encoder()],
  ]);
}

export function getQSBTCTransactionInputDecoder(): Decoder<QSBTCTransactionInput> {
  return getStructDecoder([
    ['hash', fixDecoderSize(getBytesDecoder(), 32)],
    ['index', getU32Decoder()],
    ['script', addDecoderSizePrefix(getBytesDecoder(), getU32Decoder())],
    ['sequence', getU32Decoder()],
  ]);
}

export function getQSBTCTransactionInputCodec(): Codec<
  QSBTCTransactionInputArgs,
  QSBTCTransactionInput
> {
  return combineCodec(
    getQSBTCTransactionInputEncoder(),
    getQSBTCTransactionInputDecoder()
  );
}
