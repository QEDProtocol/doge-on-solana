/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getArrayDecoder,
  getArrayEncoder,
  getOptionDecoder,
  getOptionEncoder,
  getStructDecoder,
  getStructEncoder,
  type Codec,
  type Decoder,
  type Encoder,
  type Option,
  type OptionOrNullable,
} from '@solana/kit';
import {
  getQSBTCTransactionDecoder,
  getQSBTCTransactionEncoder,
  getQSQAuxPowDecoder,
  getQSQAuxPowEncoder,
  getQSQStandardBlockHeaderDecoder,
  getQSQStandardBlockHeaderEncoder,
  type QSBTCTransaction,
  type QSBTCTransactionArgs,
  type QSQAuxPow,
  type QSQAuxPowArgs,
  type QSQStandardBlockHeader,
  type QSQStandardBlockHeaderArgs,
} from '.';

export type QSQDogeBlock = {
  header: QSQStandardBlockHeader;
  auxPow: Option<QSQAuxPow>;
  transactions: Array<QSBTCTransaction>;
};

export type QSQDogeBlockArgs = {
  header: QSQStandardBlockHeaderArgs;
  auxPow: OptionOrNullable<QSQAuxPowArgs>;
  transactions: Array<QSBTCTransactionArgs>;
};

export function getQSQDogeBlockEncoder(): Encoder<QSQDogeBlockArgs> {
  return getStructEncoder([
    ['header', getQSQStandardBlockHeaderEncoder()],
    ['auxPow', getOptionEncoder(getQSQAuxPowEncoder())],
    ['transactions', getArrayEncoder(getQSBTCTransactionEncoder())],
  ]);
}

export function getQSQDogeBlockDecoder(): Decoder<QSQDogeBlock> {
  return getStructDecoder([
    ['header', getQSQStandardBlockHeaderDecoder()],
    ['auxPow', getOptionDecoder(getQSQAuxPowDecoder())],
    ['transactions', getArrayDecoder(getQSBTCTransactionDecoder())],
  ]);
}

export function getQSQDogeBlockCodec(): Codec<QSQDogeBlockArgs, QSQDogeBlock> {
  return combineCodec(getQSQDogeBlockEncoder(), getQSQDogeBlockDecoder());
}
