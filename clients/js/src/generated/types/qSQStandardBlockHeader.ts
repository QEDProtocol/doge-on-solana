/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  fixDecoderSize,
  fixEncoderSize,
  getBytesDecoder,
  getBytesEncoder,
  getStructDecoder,
  getStructEncoder,
  getU32Decoder,
  getU32Encoder,
  type Codec,
  type Decoder,
  type Encoder,
  type ReadonlyUint8Array,
} from '@solana/kit';

export type QSQStandardBlockHeader = {
  version: number;
  previousBlockHash: ReadonlyUint8Array;
  merkleRoot: ReadonlyUint8Array;
  timestamp: number;
  bits: number;
  nonce: number;
};

export type QSQStandardBlockHeaderArgs = QSQStandardBlockHeader;

export function getQSQStandardBlockHeaderEncoder(): Encoder<QSQStandardBlockHeaderArgs> {
  return getStructEncoder([
    ['version', getU32Encoder()],
    ['previousBlockHash', fixEncoderSize(getBytesEncoder(), 32)],
    ['merkleRoot', fixEncoderSize(getBytesEncoder(), 32)],
    ['timestamp', getU32Encoder()],
    ['bits', getU32Encoder()],
    ['nonce', getU32Encoder()],
  ]);
}

export function getQSQStandardBlockHeaderDecoder(): Decoder<QSQStandardBlockHeader> {
  return getStructDecoder([
    ['version', getU32Decoder()],
    ['previousBlockHash', fixDecoderSize(getBytesDecoder(), 32)],
    ['merkleRoot', fixDecoderSize(getBytesDecoder(), 32)],
    ['timestamp', getU32Decoder()],
    ['bits', getU32Decoder()],
    ['nonce', getU32Decoder()],
  ]);
}

export function getQSQStandardBlockHeaderCodec(): Codec<
  QSQStandardBlockHeaderArgs,
  QSQStandardBlockHeader
> {
  return combineCodec(
    getQSQStandardBlockHeaderEncoder(),
    getQSQStandardBlockHeaderDecoder()
  );
}
