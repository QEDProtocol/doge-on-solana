/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getOptionDecoder,
  getOptionEncoder,
  getStructDecoder,
  getStructEncoder,
  type Codec,
  type Decoder,
  type Encoder,
  type Option,
  type OptionOrNullable,
} from '@solana/kit';
import {
  getQSQAuxPowDecoder,
  getQSQAuxPowEncoder,
  getQSQStandardBlockHeaderDecoder,
  getQSQStandardBlockHeaderEncoder,
  type QSQAuxPow,
  type QSQAuxPowArgs,
  type QSQStandardBlockHeader,
  type QSQStandardBlockHeaderArgs,
} from '.';

export type QSQDogeBlockHeader = {
  header: QSQStandardBlockHeader;
  auxPow: Option<QSQAuxPow>;
};

export type QSQDogeBlockHeaderArgs = {
  header: QSQStandardBlockHeaderArgs;
  auxPow: OptionOrNullable<QSQAuxPowArgs>;
};

export function getQSQDogeBlockHeaderEncoder(): Encoder<QSQDogeBlockHeaderArgs> {
  return getStructEncoder([
    ['header', getQSQStandardBlockHeaderEncoder()],
    ['auxPow', getOptionEncoder(getQSQAuxPowEncoder())],
  ]);
}

export function getQSQDogeBlockHeaderDecoder(): Decoder<QSQDogeBlockHeader> {
  return getStructDecoder([
    ['header', getQSQStandardBlockHeaderDecoder()],
    ['auxPow', getOptionDecoder(getQSQAuxPowDecoder())],
  ]);
}

export function getQSQDogeBlockHeaderCodec(): Codec<
  QSQDogeBlockHeaderArgs,
  QSQDogeBlockHeader
> {
  return combineCodec(
    getQSQDogeBlockHeaderEncoder(),
    getQSQDogeBlockHeaderDecoder()
  );
}
