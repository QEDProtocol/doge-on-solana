/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getArrayDecoder,
  getArrayEncoder,
  getStructDecoder,
  getStructEncoder,
  getU32Decoder,
  getU32Encoder,
  type Codec,
  type Decoder,
  type Encoder,
} from '@solana/kit';
import {
  getQSBTCTransactionInputDecoder,
  getQSBTCTransactionInputEncoder,
  getQSBTCTransactionOutputDecoder,
  getQSBTCTransactionOutputEncoder,
  type QSBTCTransactionInput,
  type QSBTCTransactionInputArgs,
  type QSBTCTransactionOutput,
  type QSBTCTransactionOutputArgs,
} from '.';

export type QSBTCTransaction = {
  version: number;
  inputs: Array<QSBTCTransactionInput>;
  outputs: Array<QSBTCTransactionOutput>;
  locktime: number;
};

export type QSBTCTransactionArgs = {
  version: number;
  inputs: Array<QSBTCTransactionInputArgs>;
  outputs: Array<QSBTCTransactionOutputArgs>;
  locktime: number;
};

export function getQSBTCTransactionEncoder(): Encoder<QSBTCTransactionArgs> {
  return getStructEncoder([
    ['version', getU32Encoder()],
    ['inputs', getArrayEncoder(getQSBTCTransactionInputEncoder())],
    ['outputs', getArrayEncoder(getQSBTCTransactionOutputEncoder())],
    ['locktime', getU32Encoder()],
  ]);
}

export function getQSBTCTransactionDecoder(): Decoder<QSBTCTransaction> {
  return getStructDecoder([
    ['version', getU32Decoder()],
    ['inputs', getArrayDecoder(getQSBTCTransactionInputDecoder())],
    ['outputs', getArrayDecoder(getQSBTCTransactionOutputDecoder())],
    ['locktime', getU32Decoder()],
  ]);
}

export function getQSBTCTransactionCodec(): Codec<
  QSBTCTransactionArgs,
  QSBTCTransaction
> {
  return combineCodec(
    getQSBTCTransactionEncoder(),
    getQSBTCTransactionDecoder()
  );
}
